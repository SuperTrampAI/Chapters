显示的行拼接：使用\反斜杠，将该行与下一行拼接成一个单独的逻辑行。在拼接多个行时，在反斜杠后面不能使用注释

隐式的行拼接：圆括号，方括号，花括号等，可以在两个括号之间直接换行，可以注释。

在python中，空格符，制表符，或者是注释的逻辑行会被忽略，即不生成nawline形符

关键字：False，await，else，import，pass，None，break，except，in，raise，True，class，finally，is，retrun，and
continue，for，lambda，try，as，def，from，nonlocal,while,assert,def,global,not with,async,elif,if or ,yield.

_* 在导入包的时候，不会被from module import * 导入，

__*__ ：系统定义的名称，python内置的一般是该定义的方式。

_* 类的私有名称

字面值用于表示一项内置类型的常量

ord('\n') 将单个字符转换成ascli值
chr(100) 将ascli值转换成字符。

一个对象创建以后，ta 的编号就不会改变，可以理解我对象的在内存中的地址，
使用is可以判断两个对象的编号是否相同，id()可以返回一代表其编号的整数。
type() 能够返回对象的类型，对象的类型不可变
对象的值可以分为可变的和不可变的，一个对象的可变性有定义参数的类型所决定的，比如字符串等是不可变的。
对于某些对象引用了外部资源的，需要显示的关闭此类对象。使用with和try..finally来保证关闭该类对象。

number.Real 机器级的双精度浮点数，取值范围和移除处理将受制于底层的机器架构

序列：此类对象表示以非负整数作为索引的有限有序集，内置函数len()可返回一个有序列的条目数量。
可以通过下标取得序列中的值a[i]，或者是切片：a[i:j]

序列可以分为不可变和可变对象
不可变对象：
    字符串，pyhton中没有char类型，而是将字符串中的每个位辨识一个长度为1的字符串对象。内置函数ord()可将一个位字符串转换成整数型
        chr() 可将一个范围内的整数转换成对应的字符串对象，str.encode()可将制定文本编码转换成bytes，而bytes.decode()可实现反向编码
    元组：使用圆括号创建，一个空元组使用一个内容为空的圆括号创建，如果只有一个元素，在值后面加一个逗号，而不用使用圆括号，
        中间又逗号分隔，可以包含任意python对象，
    字节串：是不可变的数组，8位字节，范围在0-256之间。创建方式：字节串字面值：b'str' 或者bytes()来创建对象
可变序列：在创建以后可以改变，下标和切片标注都可被复制和del语句
    列表：可以是任意python对象，列表用方括号括依赖，由逗号分隔。
集合类型：
    不重复且不可变组成的无序且有限的集合。可以进行交集，并集等计算。
    集合：通过set()创建，
    不可变集合：frozenset(),可以被用作另一个集合的元素或是字典的键
映射：
    字典：通过{}创建，
可调用类型：
    python内置的类似于__doc__的函数也是一种集合？

导入module
import不是导入的唯一方式，还可以通过importlib.import_module() 以及内置的__import__()等都是可以导入module
而对于__import__()等会导入可能存在各种副作用，比如会更新各种缓存。
找到了module则创建一个module初始化，如果没有找到，就引发ModuleNotFoundError异常。

关于importlib导包，该方法比内置的__import__()更被推荐，以及更简单
在python中，定义了两种类型的包，常规包和命名空间包
常规包通常以包含一个__init__.py文件的目录形式实现的，当常规包被导入时，__init__.py 文件就被隐式的执行。
导入包异常会引发ModuleNotFoundError异常
sys.modules 会缓存之前导入的所有模块，

包的相对导入：一个点相当于当前，两个点表示当前包的上级包。














